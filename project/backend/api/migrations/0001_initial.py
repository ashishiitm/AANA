# Generated by Django 5.1.6 on 2025-03-05 07:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0006_remove_pubmedarticle_created_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdverseEventTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('GENERAL', 'General'), ('CARDIOVASCULAR', 'Cardiovascular'), ('RESPIRATORY', 'Respiratory'), ('GASTROINTESTINAL', 'Gastrointestinal'), ('NEUROLOGICAL', 'Neurological'), ('PSYCHIATRIC', 'Psychiatric'), ('MUSCULOSKELETAL', 'Musculoskeletal'), ('DERMATOLOGICAL', 'Dermatological'), ('HEMATOLOGICAL', 'Hematological'), ('RENAL', 'Renal'), ('HEPATIC', 'Hepatic'), ('ENDOCRINE', 'Endocrine'), ('IMMUNOLOGICAL', 'Immunological'), ('OTHER', 'Other')], default='GENERAL', max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('synonyms', models.TextField(blank=True, help_text='Comma-separated list of synonyms', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Adverse Event Term',
                'verbose_name_plural': 'Adverse Event Terms',
                'unique_together': {('term', 'category')},
            },
        ),
        migrations.CreateModel(
            name='SearchRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('drug_name', models.CharField(max_length=255)),
                ('additional_keywords', models.TextField(blank=True, help_text='Additional keywords separated by commas', null=True)),
                ('date_range_start', models.DateField(blank=True, null=True)),
                ('date_range_end', models.DateField(blank=True, null=True)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('MANUAL', 'Manual')], default='MANUAL', max_length=10)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('ARCHIVED', 'Archived')], default='ACTIVE', max_length=10)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adverse_event_terms', models.ManyToManyField(related_name='search_rules', to='api.adverseeventterm')),
            ],
            options={
                'verbose_name': 'Search Rule',
                'verbose_name_plural': 'Search Rules',
            },
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matched_terms', models.TextField(help_text='Comma-separated list of matched terms')),
                ('review_status', models.CharField(choices=[('PENDING', 'Pending Review'), ('REVIEWED', 'Reviewed'), ('FLAGGED', 'Flagged for Follow-up'), ('DISMISSED', 'Dismissed')], default='PENDING', max_length=20)),
                ('reviewer_notes', models.TextField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_search_results', to='core.pubmedarticle')),
                ('search_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='api.searchrule')),
            ],
            options={
                'verbose_name': 'Search Result',
                'verbose_name_plural': 'Search Results',
                'unique_together': {('search_rule', 'article')},
            },
        ),
    ]
