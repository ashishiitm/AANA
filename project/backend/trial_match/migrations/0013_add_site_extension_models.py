# Generated by Django 3.2.13 on 2023-07-18 20:35

from django.db import migrations, models
import django.db.models.deletion
import django.contrib.postgres.fields.jsonb


class Migration(migrations.Migration):

    dependencies = [
        ('trial_match', '0012_add_protocol_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(default='USA', max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='trial_match.site')),
            ],
        ),
        migrations.CreateModel(
            name='SiteMetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recruitment_rate', models.FloatField(blank=True, null=True)),
                ('screen_failure_rate', models.FloatField(blank=True, null=True)),
                ('retention_rate', models.FloatField(blank=True, null=True)),
                ('data_quality_score', models.IntegerField(blank=True, null=True)),
                ('startup_time', models.IntegerField(blank=True, null=True)),
                ('past_trial_count', models.IntegerField(blank=True, null=True)),
                ('completed_trial_count', models.IntegerField(blank=True, null=True)),
                ('avg_enrollment_efficiency', models.FloatField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='trial_match.site')),
            ],
        ),
        migrations.CreateModel(
            name='SitePatientDemographics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pediatric_percent', models.FloatField(default=0)),
                ('adult_percent', models.FloatField(default=0)),
                ('geriatric_percent', models.FloatField(default=0)),
                ('male_percent', models.FloatField(default=0)),
                ('female_percent', models.FloatField(default=0)),
                ('ethnicity_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_demographics', to='trial_match.site')),
            ],
        ),
        migrations.CreateModel(
            name='SitePastTrial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trial_id', models.CharField(blank=True, max_length=100, null=True)),
                ('therapeutic_area', models.CharField(blank=True, max_length=100, null=True)),
                ('phase', models.CharField(blank=True, max_length=50, null=True)),
                ('year_completed', models.IntegerField(blank=True, null=True)),
                ('patients_enrolled', models.IntegerField(blank=True, null=True)),
                ('performance_rating', models.IntegerField(blank=True, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='past_trials', to='trial_match.site')),
            ],
        ),
        migrations.CreateModel(
            name='SiteTrialExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase1_count', models.IntegerField(default=0)),
                ('phase2_count', models.IntegerField(default=0)),
                ('phase3_count', models.IntegerField(default=0)),
                ('phase4_count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trial_experience', to='trial_match.site')),
            ],
        ),
        migrations.CreateModel(
            name='TherapeuticExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=100)),
                ('trial_count', models.IntegerField(default=0)),
                ('patient_count', models.IntegerField(default=0)),
                ('is_specialization', models.BooleanField(default=False)),
                ('publication_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='therapeutic_experience', to='trial_match.site')),
            ],
            options={
                'unique_together': {('site', 'area')},
            },
        ),
        migrations.CreateModel(
            name='SiteOutreachHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('mail', 'Mail'), ('in-person', 'In-person')], max_length=50)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('received', 'Received'), ('responded', 'Responded'), ('declined', 'Declined'), ('accepted', 'Accepted')], default='sent', max_length=50)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('protocol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outreach_history', to='trial_match.protocol')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outreach_history', to='trial_match.site')),
            ],
            options={
                'verbose_name_plural': 'Site outreach history',
            },
        ),
        migrations.AddIndex(
            model_name='sitelocation',
            index=models.Index(fields=['site'], name='trial_match_site_id_8a5f62_idx'),
        ),
        migrations.AddIndex(
            model_name='sitelocation',
            index=models.Index(fields=['state', 'city'], name='trial_match_state_7f4c93_idx'),
        ),
        migrations.AddIndex(
            model_name='therapeuticexperience',
            index=models.Index(fields=['area'], name='trial_match_area_1290a3_idx'),
        ),
        migrations.AddIndex(
            model_name='therapeuticexperience',
            index=models.Index(fields=['site'], name='trial_match_site_id_b99f28_idx'),
        ),
        migrations.AddIndex(
            model_name='sitepasttrial',
            index=models.Index(fields=['therapeutic_area'], name='trial_match_therape_97e91c_idx'),
        ),
        migrations.AddIndex(
            model_name='sitepasttrial',
            index=models.Index(fields=['phase'], name='trial_match_phase_2c2b5f_idx'),
        ),
        migrations.AddIndex(
            model_name='siteoutreachhistory',
            index=models.Index(fields=['site'], name='trial_match_site_id_5d9b58_idx'),
        ),
        migrations.AddIndex(
            model_name='siteoutreachhistory',
            index=models.Index(fields=['protocol'], name='trial_match_protoco_b2c1be_idx'),
        ),
        migrations.AddIndex(
            model_name='siteoutreachhistory',
            index=models.Index(fields=['date'], name='trial_match_date_4a2a60_idx'),
        ),
    ] 